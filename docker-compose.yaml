# (c) 2024 @Maxylan
version: '3.9'

networks:
  homienet:
    driver: bridge

volumes:
  homie.db_data:

services:
  homie.db: # Database
    image: mysql:8.3.0
    container_name: "${DB_HOST}"
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "HomieDB"
      MYSQL_TCP_PORT: ${DB_PORT}
      PLATFORM_V: ${PLATFORM_V}
      HOMIE: "${RELEASE_V}.${PLATFORM_V}.${PROXY_V}${API_V}${FASTAPI_V}${APP_V}"
    ports:
      - "${DB_PORT_FORWARDED}:${DB_PORT}"
    volumes:
      - ./dockerfiles/dbdumps:/dbdumps
      - ./dockerfiles/init:/docker-entrypoint-initdb.d
      - homie.db_data:/var/lib/mysql
    networks:
      - homienet

  homie.fastapi: # Homie Backend FastAPI (Python 3.11.x / FastAPI / Uvicorn)
    env_file:
      - .env
    build: 
      context: . 
      dockerfile: ./dockerfiles/homie.fastapi.Dockerfile # Python (python:3.11-slim)
    container_name: "${FASTAPI_HOST}"
    command: [ "sh", "-c", "pytest && uvicorn", "main:Homie", "--host", "0.0.0.0", "--port", "${FASTAPI_PORT}" ]
  # restart: unless-stopped # Let's disable restarting until further notice..
    environment:
      PYTHONPATH: ${FASTAPI_PYTHONPATH}
      IS_DEVELOPMENT: ${FASTAPI_IS_DEVELOPMENT}
      DB_LOG_SQL: ${DB_LOG_SQL}
      NICENAME: "${FASTAPI_NAME}"
      FASTAPI_NAME: "${FASTAPI_NAME}"
      FASTAPI_HOST: "${FASTAPI_HOST}"
      FASTAPI_PORT: "${FASTAPI_PORT}"
      FASTAPI_URL: "${FASTAPI_HOST}:${FASTAPI_PORT}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_URL: "${DB_HOST}:${DB_PORT}"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PROXY_HOST: ${HOST}
      PROXY_PORT: ${PORT}
      PROXY_SSL_PORT: ${SSL_PORT}
      HOMIE_HOST: "${HOMIE_HOST}"
      HOMIE_PORT: ${HOMIE_PORT}
      HOMIE_URL: "${HOMIE_HOST}:${HOMIE_PORT}"
      FASTAPI_V: ${FASTAPI_V}
      HOMIE: "${RELEASE_V}.${PLATFORM_V}.${PROXY_V}${API_V}${FASTAPI_V}${APP_V}"
    ports:
      - "${FASTAPI_PORT_FORWARDED}:${FASTAPI_PORT}"
  # volumes: 
  #   - './src/api:/api'
    networks:
      - homienet

  homie.api: # Homie Backend API (C# 12 / ASP.NET 8.0 w/ Swashbuckle / EntityFramework)
    env_file:
      - .env
    build: 
      context: . 
      dockerfile: ./dockerfiles/homie.api.Dockerfile # C# 12 ASP.NET 8.0 (../dotnet/sdk:8.0 & ../dotnet/aspnet:8.0)
    container_name: "${API_HOST}"
    command: [ "dotnet", "HomieBackoffice.dll" ]
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: "${ASPNETCORE_ENVIRONMENT}"
      ASPNETCORE_DETAILEDERRORS: ${ASPNETCORE_DETAILEDERRORS}
    # ASPNETCORE_URLS: "http://${API_HOST}:${API_PORT};http://localhost:${API_PORT}"
      ASPNETCORE_URLS: "http://0.0.0.0:${API_PORT}"
      DB_LOG_SQL: ${DB_LOG_SQL}
      NICENAME: "${API_NAME}"
      API_NAME: "${API_NAME}"
      API_HOST: "${API_HOST}"
      API_PORT: "${API_PORT}"
      API_URL: "${API_HOST}:${API_PORT}"
      API_IIS_HOST: "${API_HOST}"
      API_IIS_PORT: "${API_IIS_PORT}"
      API_IIS_URL: "${API_HOST}:${API_IIS_PORT}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_URL: "${DB_HOST}:${DB_PORT}"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PROXY_HOST: ${HOST}
      PROXY_PORT: ${PORT}
      PROXY_SSL_PORT: ${SSL_PORT}
      HOMIE_HOST: "${HOMIE_HOST}"
      HOMIE_PORT: ${HOMIE_PORT}
      HOMIE_URL: "${HOMIE_HOST}:${HOMIE_PORT}"
      API_V: ${API_V}
      HOMIE: "${RELEASE_V}.${PLATFORM_V}.${PROXY_V}${API_V}${FASTAPI_V}${APP_V}"
    ports:
      - "${API_PORT_FORWARDED}:${API_PORT}"
      - "${API_IIS_PORT_FORWARDED}:${API_IIS_PORT}"
  # volumes: 
  #   - './src/api:/api'
    networks:
      - homienet

  homie.httpd: # Serves Homie Frontend(s?) (Apache2 / httpd)
    image: httpd:2.4
    container_name: "${HOMIE_HOST}"
    command: ["httpd-foreground", "-DFOREGROUND", "-c", "Listen ${HOMIE_PORT:-80}"]
    restart: unless-stopped
    stdin_open: true
    tty: true
    environment:
      APACHE_PORT: ${HOMIE_PORT:-80}
      FASTAPI_HOST: "${FASTAPI_HOST}"
      FASTAPI_PORT: "${FASTAPI_PORT}"
      API_URL: "${FASTAPI_HOST}:${FASTAPI_PORT}"
      APP_V: ${APP_V}
      HOMIE: "${RELEASE_V}.${PLATFORM_V}.${PROXY_V}${API_V}${FASTAPI_V}${APP_V}"
    ports:
      - "${HOMIE_PORT_FORWARDED}:${HOMIE_PORT:-80}"
    volumes: 
      - './src/app:/usr/local/apache2/htdocs'
    networks:
      - homienet

  homie.proxy: # Reverse Proxy, handles routing and stores logs, serving the entire application.
    env_file:
      - .env
    build:
      context: . 
      dockerfile: ./dockerfiles/homie.proxy.Dockerfile # Scala (openjdk:11-jre-alpine)
    container_name: "${HOST}"
    command: [ "sbt", "run" ]
    restart: unless-stopped
    environment:
      SBT_VERSION: "${SBT_VERSION}"
      HOST: ${HOST}
      PORT: ${PORT}
      SSL_PORT: ${SSL_PORT}
      PORT_FORWARDED: ${PORT_FORWARDED}
      SSL_PORT_FORWARDED: ${SSL_PORT_FORWARDED}
      DB_HOST: "${DB_HOST}"
      DB_PORT: ${DB_PORT}
      DB_PROXY_USER: ${DB_PROXY_USER}
      DB_PROXY_PASSWORD: ${DB_PROXY_PASSWORD}
      DB_URL: "${DB_HOST}:${DB_PORT}"
      FASTAPI_HOST: "${FASTAPI_HOST}"
      FASTAPI_PORT: ${FASTAPI_PORT}
      FASTAPI_URL: "${FASTAPI_HOST}:${FASTAPI_PORT}"
      API_HOST: "${API_HOST}"
      API_PORT: ${API_PORT}
      API_URL: "${API_HOST}:${API_PORT}"
      HOMIE_HOST: "${HOMIE_HOST}"
      HOMIE_PORT: ${HOMIE_PORT}
      HOMIE_URL: "${HOMIE_HOST}:${HOMIE_PORT}"
      SSL_SELF_SIGNED: "${SSL_SELF_SIGNED}"
      SSL_SNAKEOIL_FULLCHAIN_CERTIFICATE: "${SSL_SNAKEOIL_FULLCHAIN_CERTIFICATE}"
      SSL_SNAKEOIL_PRIVATE_KEY: "${SSL_SNAKEOIL_PRIVATE_KEY}"
      SSL_CERTIFICATE: "${SSL_CERTIFICATE}"
      SSL_PRIVATE_KEY: "${SSL_PRIVATE_KEY}"
      SSL_PRIVATE_KEY_PASSWORD: "${SSL_PRIVATE_KEY_PASSWORD}"
      SSL_KEYSTORE: "${SSL_KEYSTORE}"
      SSL_KEYSTORE_PASSWORD: "${SSL_KEYSTORE_PASSWORD}"
      PROXY_V: ${PROXY_V}
      HOMIE: "${RELEASE_V}.${PLATFORM_V}.${PROXY_V}${API_V}${FASTAPI_V}${APP_V}"
    ports:
      - "${PORT_FORWARDED:-80}:${PORT}"
      - "${SSL_PORT_FORWARDED:-443}:${SSL_PORT}"
  # volumes: 
  #   - './src/proxy:/proxy'
    networks:
      - homienet
